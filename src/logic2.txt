// ****************************************************************************
//
// Logic 2: First room
//
// ****************************************************************************

#include "defines.txt"
#define chicken_1 o3
#define chicken_2 o4
#define chicken_3 o5
#define chicken_4 o6
#define tobias  o1
#define egg o12

if (new_room) {
  load.pic(room_no);
  draw.pic(room_no);
  discard.pic(room_no);
  set.horizon(37);

  // The next 6 lines need only be in the first room of the game
  if ((prev_room_no == 24 ||    // just come from intro screen
      prev_room_no == 0)) {    // or just started game
    position(ego,70,140);

    animate.obj(jeff);
    load.view(3);
    set.view(jeff,3);
    set.loop(jeff,0); 
    set.cel(jeff,0); 
    position(jeff,79,110); 
    set.priority(jeff,14);
    ignore.objs(jeff);
    draw(jeff); 

    animate.obj(rob);
    load.view(4);
    set.view(rob,4);
    set.loop(rob,0); 
    set.cel(rob,0); 
    position(rob,75,96); 
    set.priority(rob,14);
    ignore.objs(rob);
    draw(rob); 

    animate.obj(joe);
    load.view(7);
    set.view(joe,7);
    set.loop(joe,0); 
    set.cel(joe,0); 
    position(joe,85,127); 
    set.priority(joe,14);
    ignore.objs(joe);
    draw(joe); 

    animate.obj(lou);
    load.view(8);
    set.view(lou,8);
    set.loop(lou,0); 
    set.cel(lou,0); 
    position(lou,106,126); 
    set.priority(lou,14);
    ignore.objs(lou);
    draw(lou); 

    animate.obj(johannes);
    load.view(5);
    set.view(johannes,5);
    set.loop(johannes,0); 
    set.cel(johannes,0); 
    position(johannes,139,149); 
    set.priority(johannes,14);
    ignore.objs(johannes);
    draw(johannes);

    animate.obj(tobias);
    load.view(19);
    set.view(tobias,19);
    set.loop(tobias,0); 
    set.cel(tobias,0); 
    position(tobias,88,142); 
    set.priority(tobias,14);
    ignore.objs(tobias);
    draw(tobias);
    
move.obj(jeff, 40, 169, 1, jeff_reached_target); //Flag f16 gets set when jeff reaches his target, 1 is his speed
move.obj(joe, 50, 169, 1, joe_reached_target);
move.obj(lou, 70, 169, 1, lou_reached_target);
move.obj(tobias, 30, 167, 1, tobias_reached_target);
move.obj(rob, 76, 169, 1, rob_reached_target);
move.obj(johannes, 140, 169, 1, johannes_reached_target);


    status.line.on();
    accept.input();
  }

  animate.obj(chicken_1);
  load.view(11);
  set.view(chicken_1,11);
  set.loop(chicken_1,0); 
  set.cel(chicken_1,0); 
  position(chicken_1,110,97); 
  set.priority(chicken_1,6);
  ignore.objs(chicken_1);
  draw(chicken_1); 

  animate.obj(chicken_2);
  load.view(11);
  set.view(chicken_2,11);
  set.loop(chicken_2,0); 
  set.cel(chicken_2,0); 
  position(chicken_2,106,97); 
  set.priority(chicken_2,6);
  ignore.objs(chicken_2);
  draw(chicken_2); 

  animate.obj(chicken_3);
  load.view(11);
  set.view(chicken_3,11);
  set.loop(chicken_3,0); 
  set.cel(chicken_3,0); 
  position(chicken_3,112,98); 
  set.priority(chicken_3,6);
  ignore.objs(chicken_3);
  draw(chicken_3); 

  animate.obj(chicken_4);
  load.view(11);
  set.view(chicken_4,11);
  set.loop(chicken_4,0); 
  set.cel(chicken_4,0); 
  position(chicken_4,106,93); 
  set.priority(chicken_4,6);
  ignore.objs(chicken_4);
  draw(chicken_4); 

wander(chicken_1);
wander(chicken_2);
wander(chicken_3);
wander(chicken_4);

if (!has("egg") && !isset(johannes_got_egg)) {
  animate.obj(egg);
  load.view(26);
  set.view(egg,26);
  set.loop(egg,0); 
  set.cel(egg,0); 
  position(egg,124,103); 
  set.priority(egg,8);
  ignore.objs(egg);
  draw(egg); 
}

if (prev_room_no == 3) {
   position(ego,83,163);
  v6 = 1;
 }

if (prev_room_no == 20) {
   position(ego,53,104);
   v6 = 5;
 }

  draw(ego);
  show.pic();

  if (isset(johannes_going_to_cook))
  {
       animate.obj(johannes);
       load.view(5);
       set.view(johannes,5);
       set.loop(johannes,0); 
       set.cel(johannes,0); 
       get.posn(ego, v30, v31);
       addn(v30,5);
       position.v(johannes,v30,v31); 
       set.priority(johannes,11);
       ignore.objs(johannes);
       draw(johannes);
       reset(johannes_reached_target);
       get.posn(ego, v30, v31);
       move.obj.v(johannes, v30, v31, 2, johannes_reached_target);
  }

  if (isset(lou_accepted_invite))
  {
       animate.obj(lou);
       load.view(8);
       set.view(lou,8);
       set.loop(lou,0); 
       set.cel(lou,0); 
       get.posn(ego, v30, v31);
       addn(v30,5);
       position.v(lou,v30,v31); 
       set.priority(lou,11);
       ignore.objs(lou);
       draw(lou);
       reset(lou_reached_target);
       get.posn(ego, v30, v31);
       move.obj.v(lou, v30, v31, 2, lou_reached_target);
  }
}

if (isset(johannes_going_to_cook)) {
   get.posn(johannes, johannes_x, johannes_y);
   get.posn(ego, v30, v31);

   if (greaterv(v30, johannes_x)) {
      subv(v30, johannes_x);
      assignv(johannes_distx, v30);
   }
   else {
      subv(johannes_x, v30);
      assignv(johannes_distx, johannes_x);
   }

   if (greaterv(v31, johannes_y)) {
      subv(v31, johannes_y);
      assignv(johannes_disty, v31);
   }
   else {
      subv(johannes_y, v31);
      assignv(johannes_disty, johannes_y);
  }

   if (lessn(johannes_distx, 5) && lessn(johannes_disty, 5)) {
      stop.cycling(johannes);
      stop.motion(johannes);
   }

   if ((!lessn(johannes_distx, 7) || !lessn(johannes_disty, 7))) {
      start.cycling(johannes);
      get.posn(ego, v30, v31);
      move.obj.v(johannes, v30, v31, 2, johannes_reached_target);
   }
}
else {
if (isset(johannes_reached_target))
{
   erase(johannes);
}
}

if (isset(lou_accepted_invite)) {
   get.posn(lou, lou_x, lou_y);
   get.posn(ego, v30, v31);

   if (greaterv(v30, lou_x)) {
      subv(v30, lou_x);
      assignv(lou_distx, v30);
   }
   else {
      subv(lou_x, v30);
      assignv(lou_distx, lou_x);
   }

   if (greaterv(v31, lou_y)) {
      subv(v31, lou_y);
      assignv(lou_disty, v31);
   }
   else {
      subv(lou_y, v31);
      assignv(lou_disty, lou_y);
  }

   if (lessn(lou_distx, 5) && lessn(lou_disty, 5)) {
      stop.cycling(lou);
      stop.motion(lou);
   }

   if ((!lessn(lou_distx, 7) || !lessn(lou_disty, 7))) {
      start.cycling(lou);
      get.posn(ego, v30, v31);
      move.obj.v(lou, v30, v31, 2, lou_reached_target);
   }
}

get.posn(ego, v30, v31);

if (said("look")) {
   if((has("egg") || isset(johannes_got_egg))) {
      print("You are in the back end of the garden. Rita has flown away after having been connected to mains for several seconds.");
   }
   else {
     print("You are in the back end of the garden. Rita has flown away after having been connected to mains for several seconds.");
     print("She left something behind.");
   }
}

if(said("pickup", "egg")) {
   if((has("egg") || isset(johannes_got_egg))) {
       print("There is no egg to pickup.");
   }
   else {
       get("egg");
       erase(egg);
       print("You picked up an egg!");
   }
}

if (said("open", "door")) {
  reset(if_handled);
  if ((v30 < 59) && (v30 > 47) && (v31 < 105))
  {
     if (isset(shed_open))
     {
         new.room(20);
         set(if_handled);
      }
      else
      {
          print("Door locked.");
          set(if_handled);
      }
  }

  if (!isset(if_handled))
  {
    print("What door?");
  }
}

if (isset(jeff_reached_target))
{
   erase(jeff);
}

if (isset(joe_reached_target))
{
   erase(joe);
}

if (isset(lou_reached_target))
{
   erase(lou);
}

if (isset(tobias_reached_target))
{
   erase(tobias);
}

if (isset(rob_reached_target))
{
   erase(rob);
}



if (ego_edge_code == bottom_edge) {   // ego touching bottom edge of screen
  new.room(3);
}

return();


































