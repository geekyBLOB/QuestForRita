// ****************************************************************************
//
// Logic 23: Intro screen
//
// ****************************************************************************

#include "defines.txt"
#define chicken_1 o3
#define chicken_2 o4
#define chicken_3 o5
#define chicken_4 o6
#define tobias  o1
#define bubble o2
#define faye o12

if (new_room) {
    prevent.input();
    status.line.off();

    load.pic(room_no);
    draw.pic(room_no);
    discard.pic(room_no);
    set.horizon(37);

    position(ego,123,98);

    animate.obj(jeff);
    load.view(3);
    set.view(jeff,3);
    set.loop(jeff,0); 
    set.cel(jeff,0); 
    position(jeff,76,84); 
    set.priority(jeff,8);
    ignore.objs(jeff);
    draw(jeff); 

    animate.obj(rob);
    load.view(4);
    set.view(rob,4);
    set.loop(rob,0); 
    set.cel(rob,0); 
    position(rob,28,106); 
    set.priority(rob,9);
    ignore.objs(rob);
    draw(rob); 

    animate.obj(joe);
    load.view(7);
    set.view(joe,7);
    set.loop(joe,0); 
    set.cel(joe,0); 
    position(joe,100,109); 
    set.priority(joe, 9);
    ignore.objs(joe);
    draw(joe); 

    animate.obj(lou);
    load.view(8);
    set.view(lou,8);
    set.loop(lou,0); 
    set.cel(lou,0); 
    position(lou,132,128); 
    set.priority(lou,11);
    ignore.objs(lou);
    draw(lou); 

    animate.obj(johannes);
    load.view(5);
    set.view(johannes,5);
    set.loop(johannes,0); 
    set.cel(johannes,0); 
    position(johannes,138,158); 
    set.priority(johannes,13);
    ignore.objs(johannes);
    draw(johannes);

    animate.obj(tobias);
    load.view(19);
    set.view(tobias,19);
    set.loop(tobias,0); 
    set.cel(tobias,0); 
    position(tobias,96,139); 
    set.priority(tobias,14);
    ignore.objs(tobias);
    draw(tobias);

    animate.obj(faye);
    load.view(0);
    set.view(faye,0);
    set.loop(faye,0); 
    set.cel(faye,0); 
    position(faye,119,99); 
    set.priority(faye,9);
    ignore.objs(faye);
    draw(faye);
    
   move.obj(jeff, 70, 104, 1, jeff_reached_target);
   wander(joe);
   wander(lou);
   wander(tobias);
   move.obj(rob, 62, 106, 1, rob_reached_target);
   wander(johannes);
   wander(faye);

  animate.obj(chicken_1);
  load.view(11);
  set.view(chicken_1,11);
  set.loop(chicken_1,0); 
  set.cel(chicken_1,0); 
  position(chicken_1,110,97); 
  set.priority(chicken_1,6);
  ignore.objs(chicken_1);
  draw(chicken_1); 

  animate.obj(chicken_2);
  load.view(11);
  set.view(chicken_2,11);
  set.loop(chicken_2,0); 
  set.cel(chicken_2,0); 
  position(chicken_2,106,97); 
  set.priority(chicken_2,6);
  ignore.objs(chicken_2);
  draw(chicken_2); 

  animate.obj(chicken_3);
  load.view(11);
  set.view(chicken_3,11);
  set.loop(chicken_3,0); 
  set.cel(chicken_3,0); 
  position(chicken_3,112,98); 
  set.priority(chicken_3,6);
  ignore.objs(chicken_3);
  draw(chicken_3); 

  animate.obj(chicken_4);
  load.view(11);
  set.view(chicken_4,11);
  set.loop(chicken_4,0); 
  set.cel(chicken_4,0); 
  position(chicken_4,106,93); 
  set.priority(chicken_4,6);
  ignore.objs(chicken_4);
  draw(chicken_4); 

   wander(chicken_1);
   wander(chicken_2);
   wander(chicken_3);
   wander(chicken_4);

  show.pic();

  small_counter = 0;
  big_counter = 0;
}

if (isset(jeff_reached_target))
{
   if (posn(jeff, 76, 84, 76, 84)) {
      reset(jeff_reached_target);
      move.obj(jeff, 70, 104, 1, jeff_reached_target);
   }
   else {
      if (posn(jeff, 70, 104, 70, 104)) {
         reset(jeff_reached_target);
         move.obj(jeff, 76, 84, 1, jeff_reached_target);
      }
   }
}

if (isset(rob_reached_target))
{
 if (posn(rob, 62, 106, 62, 106)) {
      reset(rob_reached_target);
      move.obj(rob, 28, 106, 1, rob_reached_target);
   }
   else {
      if (posn(rob, 28, 106, 28, 106)) {
         reset(rob_reached_target);
         move.obj(rob, 62, 106, 1, rob_reached_target);
      }
   }
}

if (equaln(small_counter, 158)) {
   small_counter = 0;
   if (equaln(big_counter, 164)) {
       big_counter = 0;
   }
   else {
       addn(big_counter,1);
   }
}
else {
   addn(small_counter, 1);
}

if (equaln(big_counter,0) && equaln(small_counter, 20)) {
  display(0,0,"It is a lovely summer's day and");
  display(1,0,"everyone is out in the garden.         ");
  display(2,0,"                                        ");
}

if (equaln(big_counter,0) && equaln(small_counter, 70)) {
  display(0,0,"Joe and Faye are tending to the         ");
  display(1,0, "chickens. Johannes, Lou and tobias are  ");
  display(2,0, "tending to the plants.                  ");
}

if (equaln(big_counter,0) && equaln(small_counter, 130)) {
  display(0,0,"Jeff and Rob are in the process of      ");
  display(1,0, "hooking the shed up with some           ");
  display(2,0,"electricity.                            ");
}

if (equaln(big_counter,1) && equaln(small_counter, 30)) {
  display(0,0,"Rob: Is everything connected?           ");
  display(1,0,"                                        ");
  display(2,0,"                                        ");
}

if (equaln(big_counter,1) && equaln(small_counter, 70)) {
  display(0,0,"Jeff: Yea I reckon so, ship it.         ");
  display(1,0,"                                        ");
  display(2,0,"                                        ");
}

if (equaln(big_counter,1) && equaln(small_counter, 100)) {
    animate.obj(bubble);
    load.view(21);
    set.view(bubble,21);
    set.loop(bubble,0); 
    set.cel(bubble,0); 
    position(bubble,16,31); 
    set.priority(bubble, 14);
    ignore.objs(bubble);
    draw(bubble);
    stop.cycling(bubble); 
}

if (equaln(big_counter,1) && equaln(small_counter, 108)) {
   set.cel(bubble,1);
}

if (equaln(big_counter,1) && equaln(small_counter, 116)) {
   set.cel(bubble,2);
}

if (equaln(big_counter,1) && equaln(small_counter, 124)) {
   set.cel(bubble,3);
}

if (equaln(big_counter,1) && equaln(small_counter, 132)) {
   erase(bubble);
    animate.obj(bubble);
    load.view(21);
    set.view(bubble,21);
    set.loop(bubble,1); 
    set.cel(bubble,0); 
    position(bubble,104,80); 
    set.priority(bubble, 14);
    ignore.objs(bubble);
    draw(bubble);
    stop.cycling(bubble); 
}

if (equaln(big_counter,1) && equaln(small_counter, 140)) {
   set.cel(bubble,1);
}

if (equaln(big_counter,1) && equaln(small_counter, 148)) {
   set.cel(bubble,2);
}

if (equaln(big_counter,1) && equaln(small_counter, 156)) {
   set.cel(bubble,3);
}

if (equaln(big_counter,2) && equaln(small_counter, 5)) {
   set.cel(bubble,4);
}

if (equaln(big_counter,2) && equaln(small_counter, 13)) {
   set.cel(bubble,5);
}

if (equaln(big_counter,2) && equaln(small_counter, 21)) {
   set.cel(bubble,6);
}

if (equaln(big_counter,2) && equaln(small_counter, 29)) {
   set.cel(bubble,7);
}

if (equaln(big_counter,2) && equaln(small_counter, 37)) {
   set.cel(bubble,6);
}

if (equaln(big_counter,2) && equaln(small_counter, 45)) {
   set.cel(bubble,7);
}

if (equaln(big_counter,2) && equaln(small_counter, 53)) {
   erase(bubble);
   new.room(24);
}

return();









