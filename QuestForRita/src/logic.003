// ****************************************************************************
//
// Logic 3: Front end of Garden
//
// ****************************************************************************

#include "defines.txt"
#define quail1 o1
#define quail2 o2
#define quail3 o3
#define quail4 o4
#define wheelbarrow o5

if (new_room) {
  load.pic(room_no);
  draw.pic(room_no);
  discard.pic(room_no);
  set.horizon(37);
  set(joe_reached_target);

 if (prev_room_no == 2) {
     v6 = 1;
     position(ego,89,150);
 }

 if (prev_room_no == 4) {
     v6 = 5;
     position(ego,88,116);
 }

    animate.obj(joe);
    load.view(7);
    set.view(joe,7);
    set.loop(joe,0); 
    set.cel(joe,0); 
    position(joe,10,159); 
    set.priority(joe,14);
    ignore.objs(joe);
    draw(joe);

  animate.obj(quail1);
  load.view(27);
  set.view(quail1,27);
  set.loop(quail1,0); 
  set.cel(quail1,0); 
  position(quail1,17,130); 
  set.priority(quail1,11);
  ignore.objs(quail1);
  draw(quail1); 

  animate.obj(quail2);
  load.view(27);
  set.view(quail2,27);
  set.loop(quail2,0); 
  set.cel(quail2,0); 
  position(quail2,12,128); 
  set.priority(quail2,11);
  ignore.objs(quail2);
  draw(quail2); 

  animate.obj(quail3);
  load.view(27);
  set.view(quail3,27);
  set.loop(quail3,0); 
  set.cel(quail3,0); 
  position(quail3,16,128); 
  set.priority(quail3,11);
  ignore.objs(quail3);
  draw(quail3); 

  animate.obj(quail4);
  load.view(27);
  set.view(quail4,27);
  set.loop(quail4,0); 
  set.cel(quail4,0); 
  position(quail4,12,141); 
  set.priority(quail4,11);
  ignore.objs(quail4);
  draw(quail4); 

 if (!isset(jeff_free) && !has("wheelbarrow")) {
  animate.obj(wheelbarrow);
  load.view(28);
  set.view(wheelbarrow,28);
  set.loop(wheelbarrow,0); 
  set.cel(wheelbarrow,0); 
  position(wheelbarrow,137,124); 
  set.priority(wheelbarrow,11);
  ignore.objs(wheelbarrow);
  draw(wheelbarrow);
}

   wander(quail1);
   wander(quail2);
   wander(quail3);
   wander(quail4);

  draw(ego);
  show.pic();

  if (isset(johannes_going_to_cook))
  {
       animate.obj(johannes);
       load.view(5);
       set.view(johannes,5);
       set.loop(johannes,0); 
       set.cel(johannes,0); 
       get.posn(ego, v30, v31);
       addn(v30,5);
       position.v(johannes,v30,v31); 
       set.priority(johannes,11);
       ignore.objs(johannes);
       draw(johannes);
       reset(johannes_reached_target);
       get.posn(ego, v30, v31);
       move.obj.v(johannes, v30, v31, 2, johannes_reached_target);
  }

  if (isset(lou_accepted_invite))
  {
       animate.obj(lou);
       load.view(8);
       set.view(lou,8);
       set.loop(lou,0); 
       set.cel(lou,0); 
       get.posn(ego, v30, v31);
       addn(v30,5);
       position.v(lou,v30,v31); 
       set.priority(lou,11);
       ignore.objs(lou);
       draw(lou);
       reset(lou_reached_target);
       get.posn(ego, v30, v31);
       move.obj.v(lou, v30, v31, 2, lou_reached_target);
  }
}

if (isset(johannes_going_to_cook)) {
   get.posn(johannes, johannes_x, johannes_y);
   get.posn(ego, v30, v31);

   if (greaterv(v30, johannes_x)) {
      subv(v30, johannes_x);
      assignv(johannes_distx, v30);
   }
   else {
      subv(johannes_x, v30);
      assignv(johannes_distx, johannes_x);
   }

   if (greaterv(v31, johannes_y)) {
      subv(v31, johannes_y);
      assignv(johannes_disty, v31);
   }
   else {
      subv(johannes_y, v31);
      assignv(johannes_disty, johannes_y);
  }

   if (lessn(johannes_distx, 5) && lessn(johannes_disty, 5)) {
      stop.cycling(johannes);
      stop.motion(johannes);
   }

   if ((!lessn(johannes_distx, 7) || !lessn(johannes_disty, 7))) {
      start.cycling(johannes);
      get.posn(ego, v30, v31);
      move.obj.v(johannes, v30, v31, 2, johannes_reached_target);
   }
}

if (isset(lou_accepted_invite)) {
   get.posn(lou, lou_x, lou_y);
   get.posn(ego, v30, v31);

   if (greaterv(v30, lou_x)) {
      subv(v30, lou_x);
      assignv(lou_distx, v30);
   }
   else {
      subv(lou_x, v30);
      assignv(lou_distx, lou_x);
   }

   if (greaterv(v31, lou_y)) {
      subv(v31, lou_y);
      assignv(lou_disty, v31);
   }
   else {
      subv(lou_y, v31);
      assignv(lou_disty, lou_y);
  }

   if (lessn(lou_distx, 5) && lessn(lou_disty, 5)) {
      stop.cycling(lou);
      stop.motion(lou);
   }

   if ((!lessn(lou_distx, 7) || !lessn(lou_disty, 7))) {
      start.cycling(lou);
      get.posn(ego, v30, v31);
      move.obj.v(lou, v30, v31, 2, lou_reached_target);
   }
}

if(isset(joe_reached_target))
{
   if (posn(joe,9,158,11,160))
   {
      move.obj(joe, 34, 159, 1, joe_reached_target);
    }
    else
    {
      move.obj(joe, 10, 159, 1, joe_reached_target);
    }

     reset(joe_reached_target);
}
    

if (said("look")) {
  if (isset(johannes_wants_ingrediants)) {
         if(!isset(johannes_got_quail)) {
            print("You are in the front end of the garden. One of the quails looks a bit mangey, maybe it is time for it to go to sleep...in an oven.");
         }
         else {
           print("You are in the front end of the garden. The quails are playing happily.");
         }
     }
  else {
     print("You are in the front end of the garden. The quails are playing happily.");
     }
}

if (said("pickup", "wheelbarrow")) {
   if (!isset(jeff_free) && !has("wheelbarrow")) {
      get("wheelbarrow");
      erase(wheelbarrow);
      print("You picked up a wheelbarrow.");
   }
   else {
      print("There is no wheelbarrow to pick up.");
   }
}

if (said("speak", "joe")) {
    if (!isset(johannes_wants_ingrediants))  {
         print("I can't speak now, I am tending my beans");
    }
    else  {
         if (!has("quail")) {
            print("Faye: Johannes needs a quail for the 12 bird roast, can I have the quail that is limping around.");
            print("Joe: Sure.");
            get("quail");
            print("You recievedl a quail!");
         }
         else {
            print("Yello, what can I do you for?");
         }
     }
}

if (ego_edge_code == bottom_edge) {   // ego touching bottom edge of screen
  new.room(2);
}

if (posn(ego, 68,110, 108, 111))
{
   new.room(4);
}

return();




























